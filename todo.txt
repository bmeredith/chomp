# TODO

architecture changes after working on client:

Propose/Accept (for later)
- need a way to let the client know that there is a pending battle (e.g. a queue or way to show pending battles)
- need a way for the original caller to auto-start after it's been accepted
(so need to keep track of both in-flight matches for both the proposer and the accepter)

Events (for later)
- return some info when execute is done as an event
- probably also store the p0 team index in the battle struct so that we can access it onchain

Saving gas
- specify specifically which team items to get when querying instead of returning the entire amount for DefaultValidator
- e.g. specify indices, should save a lot of gas, rn execute() is taking 1m gas which is not needed
- turn commitments into just 2 sstores
- turn mon state into uint8s for the bool flags

---------------------------------------------------------------------------------------------

KNOWN BUGGY INTERACTIONS

1) If a move forces a switch and triggers before the other player can make its move
- The Engine handles the case where the stamina is insufficient (it just skips the move)

Ways to mitigate:
- avoid forcing opponent swap outs unless

2) If an effect calls dealDamage() and triggers AfterDamage, it can potentially cause an infinite loop!
(either if it calls dealDamage() on the opposing mon who also has a damaging attack with an AfterDamage trigger)

Ways to mitigate:
- deal damage directly (but skip calling dealDamage) on the Engine
- avoid dealing damage in the afterDamage hook itself, or in ways that are long-lasting

3) Ending a match before any moves are committed is valid (just be aware)

---------------------------------------------------------------------------------------------

Later features:
- disabled / anti switch status effect

Status effects:

(Auto cure)
- Sleep, cannot take action, 33% chance of cure every turn, max 3 turns [x]
- Fright, takes 1 stamina damage every turn, 33% chance of cure every turn, max 3 turns [x]

(No cure)
- Frostbite, takes 1/16 damage every turn, reduces special attack by 50% [x]
- Burn, takes 1/16 damage every turn, reduces attack by 50% []
- Poison, takes 1/8 damage every turn []
- Shock, reduces speed by 50%, 25% chance cannot move []

Missing from attack calculator:
- critical hits
- variance
- STAB

---------------------------------------------------------------------------------------------

### random thoughts

- to think about move implementations:
    - tricky moves to use as examples for edge cases:
        - parting shot
        - destiny bond
        - substitute
        - volt switch
        - barrier/frost veil

    - categorizing move types
        - normal damaging moves (trade-off between accuracy and damage)
        - normal damaging move + % to inflict additional effect (status, stat boost, stamina, etc.)
        - stat boost (2 stages to any one stat) / (1 stage to two stats)
        - healing (reduced healing over time)
        - environmental (hazards/weather/etc.)

---------------------------------------------------------------------------------------------