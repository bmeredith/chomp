TODO

- implement isValidTarget(false) to ensure the engine will fail if it's not a valid target and test for it

- write tests for afterDamage hook

- consider an onMonSwitchOut flag and write some tests to ensure that it runs so we can clear temporary effects 
when a mon switches out

---------------------------------------------------------------------------------------------

- to think about move implementations:
    - tricky moves to use as examples for edge cases:
        - parting shot
        - destiny bond
        - substitute
        - volt switch
        - barrier/frost veil

    - categorizing move types
        - normal damaging moves (trade-off between accuracy and damage)
        - normal damaging move + % to inflict additional effect (status, stat boost, stamina, etc.)
        - stat boost (2 stages to any one stat) / (1 stage to two stats)
        - healing (reduced healing over time)
        - environmental (hazards/weather/etc.)

Negative Status Effects:

(Auto cure)
- Sleep, cannot take action, 33% chance of cure every turn, max 3 turns
- Fright, takes 1 stamina damage every turn, 33% chance of cure every turn, max 3 turns
- Disabled, cannot switch out, 33% chance of cure every turn, max 3 turns

(No cure)
- Frostbite, takes 1/16 damage every turn, reduces special attack by 50%
- Burn, takes 1/16 damage every turn, reduces attack by 50%
- Poison, takes 1/8 damage every turn
- Shock, reduces speed by 50%, 25% chance cannot move

---------------------------------------------------------------------------------------------

NOTE: KNOWN BUGGY INTERACTION
- If a move forces a switch and triggers before the other player can make its move, it might be an invalid move
- The Engine handles the case where the stamina is insufficient (it just skips the move)
- But other weird cases might happen!